apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "com.cannan.framwork"
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        ndk {
            abiFilters 'armeabi','armeabi-v7'
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }


    applicationVariants.all { variant ->
        appendVersionNameVersionCode(variant, defaultConfig)

    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support'
    })
    compile 'com.android.support:appcompat-v7:25.3.1'
    testCompile 'junit:junit:4.12'

    //version 1.3.1 contains function update and crash report
    compile 'com.tencent.bugly:crashreport_upgrade:1.3.1'

    //rx
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    compile 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'

    //gson
    compile 'com.google.code.gson:gson:2.7'


    //stetho
    compile 'com.facebook.stetho:stetho:1.3.1'
    compile 'com.facebook.stetho:stetho-okhttp3:1.3.1'

    //dagger2
    compile 'com.google.dagger:dagger:2.0'
    apt 'com.google.dagger:dagger-compiler:2.0'
    provided 'org.glassfish:javax.annotation:10.0-b28'

}

static def appendVersionNameVersionCode(variant, defaultConfig) {
    variant.outputs.each { output ->
        def file = output.outputFile
        def fileName = file.name.replace(".apk", defaultConfig.versionName + "." + defaultConfig.versionCode + ".apk")
        def contents = fileName.replaceAll("-release", "xxx")
        output.outputFile = new File(file.parent, contents);
    }
}
